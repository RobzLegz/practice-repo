import Head from 'next/head'
import { useEffect, useState } from 'react'
import {Socket} from "phoenix"

export default function Home() {
  const [messages, setMessages] = useState([]);
  const [message, setMessage] = useState("");
  const [username, setUsername] = useState("");
  const [mySocket, setMySocket] = useState(null);
  const [myChannel, setMyChannel] = useState(null);
  const [joined, setJoined] = useState(false);

  useEffect(() => {
    if(!mySocket){
      let socket = new Socket("ws://localhost:4000/socket", {});
      setMySocket(socket);
    }else{
      mySocket.connect()
      if(!myChannel){
        let channel = mySocket.channel("sushouse:lobby", {})
        setMyChannel(channel);
      }else{
        if(!joined){
          myChannel.join()
          .receive("ok", resp => { console.log("Joined successfully", resp) })
          .receive("error", resp => { console.log("Unable to join", resp) })
          
          setJoined(true)
        }else{
          myChannel.on("shout", (payload) => {
            if(messages.length === 0){
              setMessages([payload]);
            }else{
              setMessages([...messages, payload]);
            }
          })
        }
      }      
    }
  }, [mySocket, myChannel, joined, messages]);

  const submit = (e) => {
    e.preventDefault();

    myChannel.push("shout", {username: username, message: message})
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <form>
        <div>
          {
            messages.map((message, i) => (
              <div key={i}>
                <strong>{message.username}</strong>
                <p>{message.message}</p>
              </div>
            ))
          }
        </div>
        <div>
          <input type="text" name="" id="" placeholder="username" onChange={(e) => setUsername(e.target.value)} value={username}  />
          <input type="text" name="" id="" placeholder="message" onChange={(e) => setMessage(e.target.value)} value={message}  />
          <button onClick={(e) => submit(e)}>send</button>
        </div>
      </form>
    </div>
  )
}
